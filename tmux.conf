set -s escape-time 0
# some binds
unbind C-b
set -g prefix C-a                   # Use C-a as prefix
bind a send-prefix
bind J     previous-window
bind K     next-window
bind Left  resize-pane -L 5
bind Right resize-pane -R 5
bind Up    resize-pane -U 5
bind Down  resize-pane -D 5
bind n     command-prompt 'rename-window %%'
bind N     command-prompt 'rename-session %%'

unbind r
bind r source-file "/home/njichev/dotfiles/tmux.conf" \; display-message "Config reloaded"

set-option -g default-terminal "tmux-256color"
set-option -g default-shell "/usr/bin/fish"
set -g base-index 1

# warning sound
set -g bell-action any

# I dont want to be asked when killing a window/pane
# like seriously I went through the effort of pressing C-a x
bind-key x kill-pane
bind-key & kill-window

# Use vim keybindings in copy mode
setw -g mode-keys vi
set -g status-keys vi
set-window-option -g mode-keys vi

bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -i -sel p -f | xclip -i -sel c" \; display-message "Copied to system clipboard."
bind-key -T copy-mode-vi 'Y' send -X copy-pipe "xclip -i -sel p -f | xclip -i -sel c" \; display-message "Copied to system clipboard."

set -g mouse on

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# Clear screen with C-a C-l
bind C-l send-keys 'C-l'

# rebind pane tiling
bind V split-window -h
bind H split-window
bind / split-window -h
bind - split-window

# quick pane cycling
unbind ^A
bind ^A select-pane -t :.+

# screen like window toggling
bind C-a last-window
bind Tab last-window
bind Escape copy-mode

# Keep plenty of history for scrollback
set -g history-limit 10000

# soften status bar color from harsh green to light gray
set -g status-bg '#666666'
set -g status-fg '#aaaaaa'
set-option -g status-fg colour14
set-option -g status-bg colour0
set-option -g status-left-bg default
set-option -g status-left-fg colour74

# remove administrative debris (session name, hostname, time) in status bar
set -g status-left ''
set -g status-right ''
set -g status-position bottom


set-option -g status-position bottom
# set-window-option -g xterm-keys on
bind-key -n S-Up set-option -g status
bind-key -n S-Down set-option -g status

set-option -g status-fg white
set-option -g status-bg default
set-option -g status-attr default

set-window-option -g window-status-fg "#666666"
set-window-option -g window-status-bg default
set-window-option -g window-status-attr default
set-window-option -g window-status-current-fg red
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr default

set-option -g message-fg white
set-option -g message-bg black
set-option -g message-attr bright

set -g status-left " "
set -g status-justify left

# setw -g window-status-format         ' #(echo "#{pane_current_command}") '
# setw -g window-status-current-format ' #(echo "#{pane_current_command}") '
setw -g window-status-format " #I:#W "
setw -g window-status-current-format " #I:#W "
set -g status-right " "
set-window-option -g automatic-rename off
set-option -g allow-rename off

